#!/bin/bash -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]
then
  printf "My IP address is %s\n" "$_IP"
fi


SETUP_LOGFILE=/boot/teslausb-headless-setup.log

function setup_progress () {
  echo "$( date ) : $1" >> "$SETUP_LOGFILE" || echo "can't write to $SETUP_LOGFILE"
  echo "$1"
}

function setup_ap_ssid_pass () {
  if [ ! -e /root/TESLAUSB_AP_MODE_SETUP_FINISHED ]
  then
    if [ -e "/root/teslausb_setup_variables.conf" ]
    then
      # remountfs_rw
      /root/bin/remountfs_rw
      
      local mac_addr
      mac_addr=$(cat /sys/class/net/wlan0/address)
      # remove ":" in mac addr
      mac_addr="${mac_addr//:/}"
      local ap_ssid="TC-${mac_addr}"
      local ap_pass=${mac_addr}
      # replace YOUR_AP_SSID and YOUR_AP_PASSWORD with AP_SSID and AP_PASSWORD
      sed -i -e "s/YOUR_AP_SSID/$ap_ssid/g" /root/teslausb_setup_variables.conf
      sed -i -e "s/YOUR_AP_PASSWORD/$ap_pass/g" /root/teslausb_setup_variables.conf

      # configure ap mode
      /root/bin/configure-ap.sh
      reboot
    fi
  fi
}

if [ -e "/boot/teslausb_setup_variables.conf.sample" ]
then
  if [ -e /root/bin/remountfs_rw ]
  then
    /root/bin/remountfs_rw
  fi
  # rename sample as conf file
  mv /boot/teslausb_setup_variables.conf.sample /root/teslausb_setup_variables.conf
  dos2unix /root/teslausb_setup_variables.conf
fi

if [ -e "/root/teslausb_setup_variables.conf" ]
then
  source "/root/teslausb_setup_variables.conf"
fi

# Check for headless setup
if [ -z "${HEADLESS_SETUP+x}" ]
then
  HEADLESS_SETUP=false
fi

/root/bin/run-setup-teslausb

# this replaces YOUR_AP_SSID with TC-<mac addr> and password as <mac addr>
setup_ap_ssid_pass

# run this only after web setup has finished
if [ -e /mutable/TESLAUSB_WEB_SETUP_FINISHED ]
then
  /root/bin/enable_wifi
fi

mkdir -p /mutable/pm2
export PM2_HOME='/mutable/pm2'

if [ ! -d /mutable/pm2/modules/pm2-logrotate ]
then
  /root/bin/remountfs_rw
  cp -r /root/src/pm2-logrotate /mutable/pm2/
  pm2 install file:///mutable/pm2/pm2-logrotate
  pm2 update
fi

# max file size of 1 mb
pm2 set pm2-logrotate:max_size 1M
# retain last 12 files
pm2 set pm2-logrotate:retain 7
# compress log files
pm2 set pm2-logrotate:compress true
# run every day
pm2 set pm2-logrotate:rotateInterval '0 0 0 */1 * *'

PM2_HOME='/mutable/pm2' pm2 start --env production /root/src/RP4/ecosystem.config.js

exit 0
